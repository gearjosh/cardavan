{"version":3,"sources":["components/CardController.js","components/CardShower.js","components/DeckList.js","App.js","serviceWorker.js","index.js","reducers/deckReducer.js"],"names":["Container","styled","section","Input","input","Column","div","Header","h3","Box","Label","label","Button","button","SubButton","caravanImg","connect","state","deck","drawPile","shuffled","props","drawButton","useState","category","setCategory","cardText","setCardText","image","setImage","onClick","dispatch","length","type","htmlFor","name","placeholder","onChange","event","target","value","card","text","imageLink","Cardtainer","Text","p","Card","Image","img","selectedCard","flippedCard","showingCard","cardGuts","Fragment","src","alt","Boxes","map","key","id","Grid","Boolean","window","location","hostname","match","store","createStore","NaN","discardPile","action","newCard","newDeck","concat","shuffle","ary","arySafe","console","log","i","j","Math","floor","random","shuffledDeck","drawnCard","newDrawPile","splice","newDiscardPile","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aeefdb67.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst Container = styled.section`\n  // width: 40vw;\n\tcolor: hotpink;\n\tbackground-color: peachpuff;\n  padding: 1rem;\n  // max-width: 40%;\n`;\n\nconst Input = styled.input`\n\tborder: none;\n\tborder-bottom: .125rem solid skyblue;\n\toutline: none;\n\t// width: 100%;\n\tmargin-bottom: .5rem;\n`;\n\nconst Column = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n`;\n\n// const Row = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   justify-content: space-between;\n//   width: 100%;\n// `;\n\nconst Header = styled.h3`\n  color: #8779b3;\n  margin: 0 0 1vw 0;\n  font-size: 2.8rem;\n  font-weight: bold;\n`;\n\nconst Box = styled.div`\n  box-sizing: border-box;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  // overflow: hidden;\n`;\n\nconst Label = styled.label`\n\tcolor: steelblue;\n  font-size: 1.5rem;\n`;\n\nconst Button = styled.button`\n  border: none;\n  background-color: #ff738a;\n  color: ivory;\n  padding: 1vw;\n  font-size: 1.1rem;\n  width: 100%;\n  margin-bottom: 1vw;\n`;\n\nconst SubButton = styled(Button)`\n  border: none;\n  background-color: tomato;\n  color: ivory;\n  padding: 1vw;\n  font-size: 1.1rem;\n  width: 100%;\n  margin-bottom: 1vw;\n`;\n\nconst caravanImg = \"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/95a93d8c-f701-4cd4-9cf9-ffc64bf770a0/d4styk3-94366440-2b7c-4ba4-ad29-1369b0b3edfa.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvOTVhOTNkOGMtZjcwMS00Y2Q0LTljZjktZmZjNjRiZjc3MGEwXC9kNHN0eWszLTk0MzY2NDQwLTJiN2MtNGJhNC1hZDI5LTEzNjliMGIzZWRmYS5qcGcifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.iI-j1IP4sEhzoCsnXaRRdVrwCZYfnkhYA8viC5YnXyE\"\n\nfunction CardController(props) {\n\n  const [category, setCategory] = useState(\"Normal Travel\");\n  const categoryChange = (event) => {\n    setCategory(event.target.value)\n  }\n\n  const [cardText, setCardText] = useState(\n    \"You walk, you eat some jerky, you drink some stale water, you get some sand in your boot. You know how it is, traveler.\"\n  );\n  const cardTextChange = (event) => {\n    setCardText(event.target.value);\n  };\n\n  const [image, setImage] = useState(caravanImg);\n  const imageChange = (event) => {\n    setImage(event.target.value);\n  };\n\n  const add = () => {\n    if (category < 1) {\n      setCategory('Normal Travel')\n    }\n    if (cardText.length < 1) {\n      setCardText(\"You walk, you eat some jerky, you drink some stale water, you get some sand in your boot. You know how it is, traveler.\")\n    }\n    if (image.length < 5) {\n      setImage(caravanImg);\n    }\n    const { dispatch } = props;\n    dispatch({\n      type: \"ADD_CARD\",\n      card: {\n        category: category,\n        text: cardText,\n        imageLink: image,\n      }\n    });\n  };\n\n  const shuffle = () => {\n    const { dispatch } = props;\n    dispatch({\n      type: \"SHUFFLE\"\n    });\n  };\n\n  const draw = () => {\n    const { dispatch } = props;\n    if (props.drawPile.length < 1) {\n      dispatch({\n        type: \"SHUFFLE\"\n      });\n      dispatch({\n        type: \"DRAW\",\n      });\n    } else {\n      dispatch({\n        type: \"DRAW\"\n      })\n    }\n  }\n\n  let drawButton;\n  if (props.shuffled) {\n    drawButton = <SubButton onClick={draw}>Draw</SubButton>;\n  } else {\n    drawButton = null;\n  }\n\n\treturn (\n    <Container>\n      <Header>Cardavan Î²</Header>\n      <Column>\n        <Box>\n          <Label htmlFor=\"category\">Category</Label>\n          <Input\n            name=\"category\"\n            type=\"text\"\n            placeholder=\"Calamity, Monster, Pit Stop, etc.\"\n            onChange={categoryChange}\n          />\n        </Box>\n        <Box>\n          <Label htmlFor=\"text\">Text for Card</Label>\n          <Input\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"You meet a traveler on the road...\"\n            onChange={cardTextChange}\n          />\n        </Box>\n        <Box>\n          <Label>Image Link</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"www.coolpix.gov/desert_caravan.jpg\"\n            onChange={imageChange}\n          />\n        </Box>\n        <Button onClick={add}>Add Card</Button>\n        <Button onClick={shuffle}>Shuffle Deck</Button>\n        {drawButton}\n      </Column>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    deck: state.deck,\n    drawPile: state.drawPile,\n    shuffled: state.shuffled,\n  };\n};\n\nexport default connect(mapStateToProps)(CardController);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Cardtainer = styled.section`\n  background: linear-gradient(to right, skyblue, violet);\n  padding: 3vw 1vw 1vw 1vw;\n`;\n\nconst Header = styled.h3`\n  color: #ff738a;\n  margin: 0 0 1vw 0;\n  font-size: 2.8rem;\n  font-weight: bold;\n`;\n\nconst Text = styled.p`\n  color: #64497a;\n`;\n\nconst Card = styled.div`\n  display: grid;\n  grid-template: 1fr 6fr 2fr / 100%;\n  background-color: pink;\n  border-radius: .5rem;\n  padding: 1vw;\n`;\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 36vw;\n`;\n\nfunction CardShower(props) {\n  let showingCard;\n  if (props.flippedCard) {\n    showingCard = props.flippedCard;\n  } else {\n    showingCard = props.deck[props.selectedCard];\n  }\n  \n  let cardGuts;\n  if (props.deck.length > 0) {\n    cardGuts = (\n      <React.Fragment>\n        <Header>{showingCard.category}</Header>\n        <Image\n          src={showingCard.imageLink}\n          alt=\"card\"\n        />\n        <Text>{showingCard.text}</Text>\n      </React.Fragment>\n    );\n  } else {\n    cardGuts = <p>Please make a card.</p>;\n  }\n\n  return (\n    <Cardtainer>\n        <Card>\n          {cardGuts}\n        </Card>\n      </Cardtainer>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    deck: state.deck,\n    selectedCard: state.selectedCard,\n    flippedCard: state.flippedCard,\n  };\n};\n\nexport default connect(mapStateToProps)(CardShower);","import React /*, { useEffect, useState }*/ from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Container = styled.section`\n  display: grid;\n  position:relative;\n  grid-template-columns: 100%;\n  grid-auto-rows: minmax(5rem, 5vh);\n  overflow-y: auto;\n`;\n\nconst Box = styled.div`\n  padding-left: 0.5vw;\n  box-sizing: border-box;\n  border-bottom: 0.125vw solid #ff913b;\n  cursor: pointer;\n`;\n\n// const HeaderBox = styled(Box)`\n//   background-color: tomato;\n//   width: 100%;\n// `;\n\nconst Text = styled.p`\n  color: peachpuff;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst Header = styled.h3`\n  color: peachpuff;\n  margin: .75vw;\n  font-size: 2.8rem;\n  font-weight: bold;\n`;\n\nfunction DeckList(props) {\n\n\n  const selectCard = (id) => {\n    const { dispatch } = props;\n    dispatch({\n      type: \"SELECT\",\n      id: id\n    })\n  }\n\n  const Boxes = props.deck.map((card) => {\n    return (\n      <Box\n        key={card.id}\n        onClick={() => {\n          selectCard(card.id);\n        }}\n      >\n        <Text>\n          <strong>{card.category}</strong>\n        </Text>\n        <Text>{card.text}</Text>\n      </Box>\n    );\n  });\n\n  return (\n\n    <Container>\n      <Box>        \n        <Header>Decklist</Header>\n      </Box>\n      {Boxes}\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    deck: state.deck,\n    selectedCard: state.selectedCard,\n  };\n};\n\nexport default connect(mapStateToProps)(DeckList);\n","import React from 'react';\nimport CardBuilder from './components/CardController';\nimport CardShower from './components/CardShower';\nimport DeckList from \"./components/DeckList\";\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  // font-size: 16px;\n  background-color: tomato;\n  margin: 0;\n  height: 100vh;\n  // width: 100vw;\n  // padding: 1rem;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template: 100vh / 42vw 42vw 16vw;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Grid>\n        <CardBuilder/>\n        <CardShower/>\n        <DeckList/>\n      </Grid>\n\n    </Container>\n  );\n}\n\nexport default connect(/*mapStateToProps*/)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport logger from \"redux-logger\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport deckReducer from './reducers/deckReducer';\n\nconst store = createStore(deckReducer, applyMiddleware(logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = {\n  deck: [],\n  shuffled: false,\n  selectedCard: NaN,\n  drawPile: [],\n  discardPile: [],\n  flippedCard: null,\n}, action) => {\n  let newState\n\tswitch (action.type) {\n    // case \"BLANK\":\n    //   newState = { ...state,  };\n    //   return newState;\n    case \"ADD_CARD\":\n      const newCard = { ...action.card, id: state.deck.length };\n      const newDeck = state.deck.concat(newCard);\n      newState = { ...state, deck: newDeck, selectedCard: newDeck.length - 1, flippedCard: null };\n      return newState;\n    case \"SELECT\":\n      newState = { ...state, selectedCard: action.id, flippedCard: null };\n      return newState;\n    case \"SHUFFLE\":\n      const shuffle = (ary) => {\n        const arySafe = [...ary]\n        console.log('arySafe: ', arySafe)\n        for (let i = arySafe.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [arySafe[i], arySafe[j]] = [arySafe[j], arySafe[i]];\n        }\n        return arySafe;\n      };\n      const shuffledDeck = shuffle(state.deck);\n      newState = { ...state, \n        shuffled: true,\n        drawPile: shuffledDeck,\n        discardPile: [],\n        flippedCard: {\n          category: '        ',\n          text: '        ',\n          imageLink: \"https://vignette.wikia.nocookie.net/kallipolis/images/b/b9/06e0e2ef131bd61eb4fa3a3d19e749d1.png/revision/latest?cb=20180926064526\"\n        }\n      };\n      return newState;\n    case \"DRAW\":\n      const drawnCard = state.drawPile[0];\n      const newDrawPile = state.drawPile.splice(1);\n      const newDiscardPile = state.discardPile.concat(drawnCard);\n      newState = { ...state, flippedCard: drawnCard, drawPile: newDrawPile, discardPile: newDiscardPile }\n      return newState;\n    default:\n      return state;\n  }\n}"],"sourceRoot":""}